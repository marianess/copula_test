{
    "collab_server" : "",
    "contents" : "# generating mv normal distribution of 3 random variables\n#given tho cov matrix sifma\n\nlibrary(MASS)\nset.seed(100)\n\nm <- 3\nn <- 2000\n# cov matrix sigma: var = 1\nsigma <- matrix(c(1, 0.4, 0.2,\n                 0.4, 1, -0.8,\n                 0.2, -0.8, 1),nrow=3)\n\nz <- mvrnorm(n,mu=rep(0, m),Sigma=sigma,empirical=T)\n\n# use spearman cor coefficient\nlibrary(psych)\ncor(z,method = 'spearman')\npairs.panels(z)\n\n# make 3 distributions uniform\nu <- pnorm(z)\npairs.panels(u)\n\nlibrary(rgl)\nplot3d(u[,1],u[,2],u[,3],pch=20,col='navyblue')\n\n# define new distribution functions\nx1 <- qgamma(u[,1],shape=2,scale=1)\nx2 <- qbeta(u[,2],2,2)\nx3 <- qt(u[,3],df=5)\nplot3d(x1,x2,x3,pch=20,col='blue')\n\n# look at spearman correlation\ndf <- cbind(x1,x2,x3)\npairs.panels(df)\ncor(df,meth='spearman')\n\n#####################\n#                   #\n# real-life example #\n#                   #\n#####################\n\nlibrary(copula)\nlibrary(VineCopula)\n\ncree <- read.csv('cree_r.csv',header=F)$V2\nyahoo <- read.csv('yahoo_r.csv',header=F)$V2\n\n# plot regressionline\nplot(cree,yahoo,pch='.')\nabline(lm(yahoo~cree),col='red',lwd=1)\ncor(cree,yahoo,method='spearman')\n\n# decide which copula to select\nu <- pobs(as.matrix(cbind(cree,yahoo)))[,1]\nv <- pobs(as.matrix(cbind(cree,yahoo)))[,2]\nselectedCopula <- BiCopSelect(u,v,familyset=NA)\nselectedCopula\n\n# create a 2D tCopul. pobs() converts data to uniform d.\nt.cop <- tCopula(dim=2)\nset.seed(500)\nm <-pobs(as.matrix(cbind(cree,yahoo)))\n\n# fitting copula\nfit <- fitCopula(t.cop,m,method='ml')\ncoef(fit)\n\n# save coefficients of fitted copula\nrho <- coef(fit)[1]\ndf <- coef(fit)[2]\npersp(tCopula(dim=2,rho,df=df),dCopula)\n\n# build copula and sample from it 3965 samples\nu<- rCopula(3965, tCopula(dim=2,rho,df=df))\nplot(u[,1],u[,2],pch='.', col=\"darkblue\")\ncor(u, method='spearman')\n\n# model the margnals\ncree_mu <- mean(cree)\ncree_sd <- sd(cree)\nyahoo_mu <- mean(yahoo)\nyahoo_sd <- sd(yahoo)\n\n# plot hists and normal dist with mu and sigma\n# cree\nhist(cree,breaks=80,main='Cree returns',freq=F,density=30,col='cyan',ylim=c(0,20),xlim=c(-0.2,0.3))\nlines(seq(-0.5,0.5,0.01),dnorm(seq(-0.5,0.5,0.01),cree_mu,cree_sd),col='red',lwd=2)\nlegend('topright',c('Fitted normal'),col=c('red'),lwd=2)\n\n#yahoo\nhist(yahoo,breaks=80,main='Yahoo returns',density=30,col='cyan',freq=F,ylim=c(0,20),xlim=c(-0.2,0.2))\nlines(seq(-0.5,0.5,0.01),dnorm(seq(-0.5,0.5,0.01),yahoo_mu,yahoo_sd),col='red',lwd=2)\nlegend('topright',c('Fitted normal'),col=c('red'),lwd=2)\n\n# simulate data\ncopula_dist <- mvdc(copula=tCopula(rho,dim=2,df=df), margins=c(\"norm\",\"norm\"),\n                    paramMargins=list(list(mean=cree_mu, sd=cree_sd),\n                                      list(mean=yahoo_mu, sd=yahoo_sd)))\n\n\nsim <- rMvdc(3965,copula_dist)\n\n\n# plot\nplot(cree,yahoo,main='Returns')\npoints(sim[,1],sim[,2],col='red')\nlegend('bottomright',c('Observed','Simulated'),col=c('black','red'),pch=21)\n\n#####################\n#                   #\n#      example      #\n#                   #\n#####################\n\nlibrary(scatterplot3d)\nlibrary(grid)\nlibrary(ggplot2)\nset.seed(235)\n\n# If I know parameters already:\n# in normal case param=rho\n# in t case param = rho, df = degrees of freadom\nnormal <- normalCopula(param = 0.7, dim = 2)\nstc <- tCopula(param = 0.8, dim = 2, df = 2)\nfrank <- frankCopula(dim = 2, param = 8)\ngumbel <- gumbelCopula(dim = 3, param = 5.6)\nclayton <- claytonCopula(dim = 4, param = 19)\n\n# Select the copula\ncp <- claytonCopula(param = c(3.4), dim = 2)\n\n# Generate the multivariate distribution (in this case it is just bivariate) with normal and t marginals\nmultivariate_dist <- mvdc(copula = cp,\n                          margins = c(\"norm\", \"t\"),\n                          paramMargins = list(list(mean = 2, sd=3),list(df = 2)))\n\nprint(multivariate_dist)\n\n# Generate random samples from Copula\n# rCopula() for asingl copula\n# rMvdc() for multivariate distribution\n\n# Generate random samples\nfr <- rCopula(1000, frank)\ngu <- rCopula(1000, gumbel)\ncl <- rCopula(1000, clayton)\n\n# plot random samples\np1 <- qplot(fr[,1], fr[,2], colour = fr[,1], \n            main=\"Frank copula random samples theta = 8\", \n            xlab = \"u\", ylab = \"v\")\n\np2 <- qplot(gu[,1], gu[,2], colour = gu[,1], \n            main=\"Gumbel copula random samples theta = 5.6\", \n            xlab = \"u\", ylab = \"v\") \n\np3 <- qplot(cl[,1], cl[,2], colour = cl[,1], \n            main=\"Clayton copula random samples theta = 19\", \n            xlab = \"u\", ylab = \"v\")\n\nsamples <- rMvdc(2000, multivariate_dist)\n\nscatterplot3d(samples[,1], samples[,2], color = \"blue\",pch = \"+\")\nplot3d(samples[,1], samples[,2],pch=20,col='blue')\n\n# ---- # CDF and PDF # ---- #\n\n# generate normal copula with coef 0.8\n# and sample some observations from it\ncoef_ <- 0.8\nmycopula <- normalCopula(coef_,dim=3)\nu <- rCopula(2000, mycopula)\n\n# compute the density PDF: dCopula()\npdf_<-dCopula(u, mycopula)\n\n# compute the cumulative CDF: pCopula()\ncdf <- pCopula(u, mycopula)\n\n\n# generate random sample obs-s \n# from multivariate distribution\ncp <- claytonCopula(param = c(3.4), dim = 2)\n\n# Generate the multivariate distribution (in this case it is just bivariate) with normal and t marginals\nmultivariate_dist <- mvdc(copula = cp,\n                  margins = c(\"norm\", \"t\"),\n                  paramMargins = list(list(mean = 2, sd=3),list(df = 2)))\n\nv <- rMvdc(2000, multivariate_dist)\n\n# compute density\npdf_mvd <- dMvdc(v,multivariate_dist)\n\n# compute cdf\ncdf_mvd <- pMvdc(v,multivariate_dist)\n\n# ----# Graphics # ---- #\n# 3D plain scatterplot of the multivariate distribution\npar(mfrow = c(1, 1))\nscatterplot3d(v[,1],v[,2], pdf_mvd, color=\"red\", main=\"Density\", xlab = \"u1\", ylab=\"u2\", zlab=\"pMvdc\",pch=\".\")\nscatterplot3d(v[,1],v[,2], cdf_mvd, color=\"red\", main=\"CDF\", xlab = \"u1\", ylab=\"u2\", zlab=\"pMvdc\",pch=\".\")\npersp(multivariate_dist, dMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"Density\")\ncontour(multivariate_dist, dMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"Contour plot\")\npersp(multivariate_dist, pMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"CDF\")\ncontour(multivariate_dist, pMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"Contour plot\")\n\nplot3d(v[,1],v[,2], pdf_mvd,pch=20,col='blue',main=\"Density\", xlab = \"u1\", ylab=\"u2\", zlab=\"pMvdc\")\nplot3d(v[,1],v[,2], cdf_mvd,pch=20,col='blue',main=\"CDF\", xlab = \"u1\", ylab=\"u2\", zlab=\"pMvdc\")\n\n#####################\n#                   #\n#      example      #\n#                   #\n#####################\n\n\nmydata <- read.csv('mydata.csv',header=T)\n\nplot(mydata$x,mydata$y)\nhist(mydata$x)\nhist(mydata$y)\n\n# Estimate x  gamma distribution parameters and \n# visually compare simulated vs observed data\n\nx_mean <- mean(mydata$x)\nx_var <- var(mydata$x)\nx_rate <- x_mean / x_var\nx_shape <- ( (x_mean)^2 ) / x_var\n\n# hist of mydatax\nhist(mydata$x, breaks = 20, col = \"green\", density = 20)\n# hist of gamma with rate and shape of x\nhist(rgamma(nrow(mydata), rate = x_rate, shape = x_shape), \n     breaks = 20,col = \"blue\", add = T, density = 20, angle = -45)\n\n# Estimate y gamma distribution parameters and visually compare simulated vs observed data\ny_mean <- mean(mydata$y)\ny_var <- var(mydata$y)\ny_rate <- y_mean / y_var\ny_shape <- ( (y_mean)^2 ) / y_var\n\n\nhist(mydata$y, breaks = 20, col = \"green\", density = 20)\nhist(rgamma(nrow(mydata), rate = y_rate, shape = y_shape), \n     breaks = 20, col = \"blue\", add = T, density = 20, angle = -45)\n\n# measure of association\ncor(mydata$x,mydata$y, method='kendall')\n\n# BiCopSelect() to select copula\n# acepts psedo-observations as parameter.\n# pobs() returns a matrix\nvar_a <- pobs(mydata$x)\nvar_b <- pobs(mydata$y)\nselectedCopula <- BiCopSelect(var_a,var_b,familyset=NA)\nselectedCopula\n\n# Fitting process\n# Estimate copula parameters\ncop_model <- claytonCopula(dim = 2)\nm <- pobs(as.matrix(mydata[,2:3]))\nfit <- fitCopula(cop_model, m, method = 'ml')\ncoef(fit)\n\n# Check Kendall's tau value for the Clayton copula with theta = 1.48\ntau(claytonCopula(param = 1.48))\n\n# Goodness of fit test GOF\n\n# clayton copula\ngfc <- gofCopula(claytonCopula(dim = 2), as.matrix(mydata[,2:3]), N = 50)\ngfc\n\n# bivariate normal copula\ngf <- gofCopula(normalCopula(dim = 2), as.matrix(mydata[,2:3]), N = 50)\ngf\n\n\n# Building bivariate distribution\n# using the copula\n\nmy_dist <- mvdc(claytonCopula(param = 1.48, dim = 2), \n                margins = c(\"gamma\",\"gamma\"), \n                paramMargins = list(list(shape = x_shape, rate = x_rate), \n                                    list(shape = y_shape, rate = y_rate)))\n\n# Generate random sample observations \n# from the multivariate distribution\nv <- rMvdc(5000, my_dist)\n\n# Compute the density\npdf_mvd <- dMvdc(v, my_dist)\n# Compute the CDF\ncdf_mvd <- pMvdc(v, my_dist)\n\n# 3D plain scatterplot of the generated bivariate distribution\npar(mfrow = c(1, 1))\nscatterplot3d(v[,1],v[,2], pdf_mvd, color=\"red\", main=\"Density\", xlab = \"u1\", ylab=\"u2\", zlab=\"pMvdc\",pch=\".\")\nscatterplot3d(v[,1],v[,2], cdf_mvd, color=\"red\", main=\"CDF\", xlab = \"u1\", ylab=\"u2\", zlab=\"pMvdc\",pch=\".\")\npersp(my_dist, dMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"Density\")\ncontour(my_dist, dMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"Contour plot\")\npersp(my_dist, pMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"CDF\")\ncontour(my_dist, pMvdc, xlim = c(-4, 4), ylim=c(0, 2), main = \"Contour plot\")\n\n# Now we can sample some observations from the estimated \n# joint distribution and check how they compare to the one observed.\n\nsim <- rMvdc(1000, my_dist)\n\n# Plot the data for a visual comparison\nplot(mydata$x, mydata$y, main = 'Test dataset x and y', col = \"blue\")\npoints(sim[,1], sim[,2], col = 'red')\nlegend('bottomright', c('Observed', 'Simulated'), col = c('blue', 'red'), pch=21)\n\ncor(mydata[,2:3], method = \"kendall\")\ncor(sim, method = \"kendall\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1482108193938.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "143717500",
    "id" : "BFEB1508",
    "lastKnownWriteTime" : 1482131137,
    "last_content_update" : 1482131137460,
    "path" : "C:/Users/Maria/Desktop/R/examples/Copula/example_cop.R",
    "project_path" : "example_cop.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}